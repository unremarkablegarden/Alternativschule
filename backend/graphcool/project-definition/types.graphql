type Area @model {
  id: ID! @isUnique
  name: String! @isUnique
  slug: String @isUnique
  subjects: [Subject!]! @relation(name: "SubjectArea")
}

type Competence @model {
  id: ID! @isUnique
  name: String
  slug: String
  subject: Subject! @relation(name: "SubjectCompetences")
  evaluations: [Evaluation!]! @relation(name: "CompetenceEvaluation")
}

type Evaluation @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  value: Int!
  student: User @relation(name: "StudentSelfEvaluation")
  competence: Competence! @relation(name: "CompetenceEvaluation")
  subject: Subject! @relation(name: "EvaluationSubject")
  level: Levels!
}

enum Levels {
  BK
  GK
  AK
  AK1
  AK2
}

type Material @model {
  id: ID! @isUnique
  name: String!
  description: String
  contentType: String
  uploadUrl: String
  linkUrl: String
  project: Project! @relation(name: "ProjectMaterials")
}

type PrefectNote @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
  student: User @relation(name: "PrefectNotes")
  teacher: User @relation(name: "PrefectNotesTeacher")
}

type Project @model {
  id: ID! @isUnique
  name: String! @isUnique
  slug: String! @isUnique
  description: String!
  subject: Subject! @relation(name: "SubjectProject")
  materials: [Material!]! @relation(name: "ProjectMaterials")
  teacher: User! @relation(name: "TeacherProject")
  students: [User!]! @relation(name: "StudentProject")
  selfLearn: Boolean! @defaultValue(value: false)
  isPublished: Boolean! @defaultValue(value: true)
  levels: [Levels!]
}

type StudentLevels @model {
  id: ID! @isUnique
  student: User @relation(name: "StudentLevelsStudent")
  subject: Subject! @relation(name: "StudentLevelsSubject")
  level: Levels!
}

type StudentNote @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
  subject: Subject! @relation(name: "StudentNoteSubject")
  student: User @relation(name: "StudentStudentNotes")
  teacher: User! @relation(name: "TeacherStudentNotes")
}

type Subject @model {
  id: ID! @isUnique
  name: String! @isUnique
  slug: String @isUnique
  area: Area! @relation(name: "SubjectArea")
  description: String!
  levelDescriptions: String
  projects: [Project!]! @relation(name: "SubjectProject")
  students: [User!]! @relation(name: "StudentSubject")
  teachers: [User!]! @relation(name: "TeacherSubject")
  competences: [Competence!]! @relation(name: "SubjectCompetences")
  levels: [Levels!]
  tutorLevels: [TutorLevels!]! @relation(name: "TutorLevelsSubject")
  studentLevels: [StudentLevels!]! @relation(name: "StudentLevelsSubject")
  evaluations: [Evaluation!]! @relation(name: "EvaluationSubject")
  isPublished: Boolean! @defaultValue(value: true)
  studentNotes: [StudentNote!]! @relation(name: "StudentNoteSubject")
}

type TutorLevels @model {
  id: ID! @isUnique
  teacher: User! @relation(name: "TutorLevelsTeacher")
  subject: Subject! @relation(name: "TutorLevelsSubject")
  levels: [Levels!]
}

type User @model {
  id: ID! @isUnique
  username: String @isUnique
  email: String! @isUnique
  password: String!
  firstname: String
  surname: String
  userType: UserTypes
  avatar: Int @defaultValue(value: 1)
  avatarColor: String @defaultValue(value: "blue")
  avatarImg: String
  prefect: Boolean @defaultValue(value: false)
  prefectLinks: [User!]! @relation(name: "PrefectLinks")
  teachesSubjects: [Subject!]! @relation(name: "TeacherSubject")
  teachesProjects: [Project!]! @relation(name: "TeacherProject")
  tutorLevels: [TutorLevels!]! @relation(name: "TutorLevelsTeacher")
  studentLevels: [StudentLevels!]! @relation(name: "StudentLevelsStudent")
  studiesSubjects: [Subject!]! @relation(name: "StudentSubject")
  studiesProjects: [Project!]! @relation(name: "StudentProject")
  selfEvaluations: [Evaluation!]! @relation(name: "StudentSelfEvaluation")
  studentStudentNotes: [StudentNote!]! @relation(name: "StudentStudentNotes")
  teacherStudentNotes: [StudentNote!]! @relation(name: "TeacherStudentNotes")
  prefectNotes: [PrefectNote!]! @relation(name: "PrefectNotes")
  teacherPrefectNotes: [PrefectNote!]! @relation(name: "PrefectNotesTeacher")
}

enum UserTypes {
  Admin
  Lehrer
  Schueler
}